version: '3.9'

networks:
  web:
    external: true

services:

  traefik:
    image: traefik:v2.12
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=seuemail@dominio.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json
    networks:
      - web

  bytenestti_db:
    image: postgres:15
    container_name: bytenestti_db
    restart: always
    networks:
      - web
    # variáveis do banco serão definidas externamente na VPS
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - bytenestti_postgres_data:/var/lib/postgresql/data

  bytenestti_web:
    build: ./bytenestti
    container_name: bytenestti_web
    restart: always
    depends_on:
      - bytenestti_db
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bytenestti.rule=Host(`bytenestti.com.br`)"
      - "traefik.http.routers.bytenestti.entrypoints=websecure"
      - "traefik.http.routers.bytenestti.tls.certresolver=letsencrypt"
    # variáveis do Django serão definidas externamente na VPS
    environment:
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - DB_HOST
      - DB_PORT

volumes:
  bytenestti_postgres_data: